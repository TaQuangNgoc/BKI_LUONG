///************************************************
/// Generated by: haihd
/// Date: 18/07/2016 08:53:22
/// Goal: Create User Service Class for RPT_CHOT_BANG_LUONG
///************************************************
/// <summary>
/// Create User Service Class for RPT_CHOT_BANG_LUONG
/// </summary>

using System;
using BKI_DichVuMatDat.DS;
using IP.Core.IPCommon;
using IP.Core.IPUserService;
using System.Data.SqlClient;
using System.Data;



namespace BKI_DichVuMatDat.US{

public class US_RPT_CHOT_BANG_LUONG : US_Object
{
	private const string c_TableName = "RPT_CHOT_BANG_LUONG";
#region "Public Properties"
	public decimal dcID 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "ID", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["ID"] = value;
		}
	}

	public bool IsIDNull()	{
		return pm_objDR.IsNull("ID");
	}

	public void SetIDNull() {
		pm_objDR["ID"] = System.Convert.DBNull;
	}

	public decimal dcTHANG 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "THANG", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["THANG"] = value;
		}
	}

	public bool IsTHANGNull()	{
		return pm_objDR.IsNull("THANG");
	}

	public void SetTHANGNull() {
		pm_objDR["THANG"] = System.Convert.DBNull;
	}

	public decimal dcNAM 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "NAM", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["NAM"] = value;
		}
	}

	public bool IsNAMNull()	{
		return pm_objDR.IsNull("NAM");
	}

	public void SetNAMNull() {
		pm_objDR["NAM"] = System.Convert.DBNull;
	}

	public string strCHOT_YN 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "CHOT_YN", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["CHOT_YN"] = value;
		}
	}

	public bool IsCHOT_YNNull() 
	{
		return pm_objDR.IsNull("CHOT_YN");
	}

	public void SetCHOT_YNNull() {
		pm_objDR["CHOT_YN"] = System.Convert.DBNull;
	}

#endregion
#region "Init Functions"
	public US_RPT_CHOT_BANG_LUONG() 
	{
		pm_objDS = new DS_RPT_CHOT_BANG_LUONG();
		pm_strTableName = c_TableName;
		pm_objDR = pm_objDS.Tables[pm_strTableName].NewRow();
	}

	public US_RPT_CHOT_BANG_LUONG(DataRow i_objDR): this()
	{
		this.DataRow2Me(i_objDR);
	}

	public US_RPT_CHOT_BANG_LUONG(decimal i_dbID) 
	{
		pm_objDS = new DS_RPT_CHOT_BANG_LUONG();
		pm_strTableName = c_TableName;
		IMakeSelectCmd v_objMkCmd = new CMakeAndSelectCmd(pm_objDS, c_TableName);
		v_objMkCmd.AddCondition("ID", i_dbID, eKieuDuLieu.KieuNumber, eKieuSoSanh.Bang);
		SqlCommand v_cmdSQL;
		v_cmdSQL = v_objMkCmd.getSelectCmd();
		this.FillDatasetByCommand(pm_objDS, v_cmdSQL);
		pm_objDR = getRowClone(pm_objDS.Tables[pm_strTableName].Rows[0]);
	}
#endregion

    public bool IsLockBangLuong(decimal ip_dc_thang, decimal ip_dc_nam)
    {
        CStoredProc v_pr = new CStoredProc("pr_TL_infor_lock_bang_luong_Get");
        v_pr.addDecimalInputParam("@ip_dc_thang", ip_dc_thang);
        v_pr.addDecimalInputParam("@ip_dc_nam", ip_dc_nam);
        SqlParameter v_para = v_pr.addNVarcharOutputParam("@op_str_lock_yn", "");
        v_pr.ExecuteCommand(this);
        return v_para.Value.ToString() == "Y" ? true : false;
    }

    public void LockBangLuongThang(decimal ip_dc_thang, decimal ip_dc_nam)
    {
        CStoredProc v_pr = new CStoredProc("pr_TL_bang_luong_LOCK");
        v_pr.addDecimalInputParam("@ip_dc_thang", ip_dc_thang);
        v_pr.addDecimalInputParam("@ip_dc_nam", ip_dc_nam);
        v_pr.ExecuteCommand(this);
    }
}
}
