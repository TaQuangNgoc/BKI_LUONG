//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BKI_DichVuMatDat.LicenseManagerService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LicenseManagerService.LicenseManagerSoap")]
    public interface LicenseManagerSoap {
        
        // CODEGEN: Generating message contract since element name macAddress from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkKey", ReplyAction="*")]
        BKI_DichVuMatDat.LicenseManagerService.checkKeyResponse checkKey(BKI_DichVuMatDat.LicenseManagerService.checkKeyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkKey", ReplyAction="*")]
        System.Threading.Tasks.Task<BKI_DichVuMatDat.LicenseManagerService.checkKeyResponse> checkKeyAsync(BKI_DichVuMatDat.LicenseManagerService.checkKeyRequest request);
        
        // CODEGEN: Generating message contract since element name macAddress from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkTrial", ReplyAction="*")]
        BKI_DichVuMatDat.LicenseManagerService.checkTrialResponse checkTrial(BKI_DichVuMatDat.LicenseManagerService.checkTrialRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkTrial", ReplyAction="*")]
        System.Threading.Tasks.Task<BKI_DichVuMatDat.LicenseManagerService.checkTrialResponse> checkTrialAsync(BKI_DichVuMatDat.LicenseManagerService.checkTrialRequest request);
        
        // CODEGEN: Generating message contract since element name macAddress from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkMacTrial", ReplyAction="*")]
        BKI_DichVuMatDat.LicenseManagerService.checkMacTrialResponse checkMacTrial(BKI_DichVuMatDat.LicenseManagerService.checkMacTrialRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkMacTrial", ReplyAction="*")]
        System.Threading.Tasks.Task<BKI_DichVuMatDat.LicenseManagerService.checkMacTrialResponse> checkMacTrialAsync(BKI_DichVuMatDat.LicenseManagerService.checkMacTrialRequest request);
        
        // CODEGEN: Generating message contract since element name macAddress from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/activeKey", ReplyAction="*")]
        BKI_DichVuMatDat.LicenseManagerService.activeKeyResponse activeKey(BKI_DichVuMatDat.LicenseManagerService.activeKeyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/activeKey", ReplyAction="*")]
        System.Threading.Tasks.Task<BKI_DichVuMatDat.LicenseManagerService.activeKeyResponse> activeKeyAsync(BKI_DichVuMatDat.LicenseManagerService.activeKeyRequest request);
        
        // CODEGEN: Generating message contract since element name macAddress from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/activeTrial", ReplyAction="*")]
        BKI_DichVuMatDat.LicenseManagerService.activeTrialResponse activeTrial(BKI_DichVuMatDat.LicenseManagerService.activeTrialRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/activeTrial", ReplyAction="*")]
        System.Threading.Tasks.Task<BKI_DichVuMatDat.LicenseManagerService.activeTrialResponse> activeTrialAsync(BKI_DichVuMatDat.LicenseManagerService.activeTrialRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class checkKeyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="checkKey", Namespace="http://tempuri.org/", Order=0)]
        public BKI_DichVuMatDat.LicenseManagerService.checkKeyRequestBody Body;
        
        public checkKeyRequest() {
        }
        
        public checkKeyRequest(BKI_DichVuMatDat.LicenseManagerService.checkKeyRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class checkKeyRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string macAddress;
        
        public checkKeyRequestBody() {
        }
        
        public checkKeyRequestBody(string macAddress) {
            this.macAddress = macAddress;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class checkKeyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="checkKeyResponse", Namespace="http://tempuri.org/", Order=0)]
        public BKI_DichVuMatDat.LicenseManagerService.checkKeyResponseBody Body;
        
        public checkKeyResponse() {
        }
        
        public checkKeyResponse(BKI_DichVuMatDat.LicenseManagerService.checkKeyResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class checkKeyResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool checkKeyResult;
        
        public checkKeyResponseBody() {
        }
        
        public checkKeyResponseBody(bool checkKeyResult) {
            this.checkKeyResult = checkKeyResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class checkTrialRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="checkTrial", Namespace="http://tempuri.org/", Order=0)]
        public BKI_DichVuMatDat.LicenseManagerService.checkTrialRequestBody Body;
        
        public checkTrialRequest() {
        }
        
        public checkTrialRequest(BKI_DichVuMatDat.LicenseManagerService.checkTrialRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class checkTrialRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string macAddress;
        
        public checkTrialRequestBody() {
        }
        
        public checkTrialRequestBody(string macAddress) {
            this.macAddress = macAddress;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class checkTrialResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="checkTrialResponse", Namespace="http://tempuri.org/", Order=0)]
        public BKI_DichVuMatDat.LicenseManagerService.checkTrialResponseBody Body;
        
        public checkTrialResponse() {
        }
        
        public checkTrialResponse(BKI_DichVuMatDat.LicenseManagerService.checkTrialResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class checkTrialResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool checkTrialResult;
        
        public checkTrialResponseBody() {
        }
        
        public checkTrialResponseBody(bool checkTrialResult) {
            this.checkTrialResult = checkTrialResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class checkMacTrialRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="checkMacTrial", Namespace="http://tempuri.org/", Order=0)]
        public BKI_DichVuMatDat.LicenseManagerService.checkMacTrialRequestBody Body;
        
        public checkMacTrialRequest() {
        }
        
        public checkMacTrialRequest(BKI_DichVuMatDat.LicenseManagerService.checkMacTrialRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class checkMacTrialRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string macAddress;
        
        public checkMacTrialRequestBody() {
        }
        
        public checkMacTrialRequestBody(string macAddress) {
            this.macAddress = macAddress;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class checkMacTrialResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="checkMacTrialResponse", Namespace="http://tempuri.org/", Order=0)]
        public BKI_DichVuMatDat.LicenseManagerService.checkMacTrialResponseBody Body;
        
        public checkMacTrialResponse() {
        }
        
        public checkMacTrialResponse(BKI_DichVuMatDat.LicenseManagerService.checkMacTrialResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class checkMacTrialResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool checkMacTrialResult;
        
        public checkMacTrialResponseBody() {
        }
        
        public checkMacTrialResponseBody(bool checkMacTrialResult) {
            this.checkMacTrialResult = checkMacTrialResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class activeKeyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="activeKey", Namespace="http://tempuri.org/", Order=0)]
        public BKI_DichVuMatDat.LicenseManagerService.activeKeyRequestBody Body;
        
        public activeKeyRequest() {
        }
        
        public activeKeyRequest(BKI_DichVuMatDat.LicenseManagerService.activeKeyRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class activeKeyRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string macAddress;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string company;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string key;
        
        public activeKeyRequestBody() {
        }
        
        public activeKeyRequestBody(string macAddress, string company, string key) {
            this.macAddress = macAddress;
            this.company = company;
            this.key = key;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class activeKeyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="activeKeyResponse", Namespace="http://tempuri.org/", Order=0)]
        public BKI_DichVuMatDat.LicenseManagerService.activeKeyResponseBody Body;
        
        public activeKeyResponse() {
        }
        
        public activeKeyResponse(BKI_DichVuMatDat.LicenseManagerService.activeKeyResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class activeKeyResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool activeKeyResult;
        
        public activeKeyResponseBody() {
        }
        
        public activeKeyResponseBody(bool activeKeyResult) {
            this.activeKeyResult = activeKeyResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class activeTrialRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="activeTrial", Namespace="http://tempuri.org/", Order=0)]
        public BKI_DichVuMatDat.LicenseManagerService.activeTrialRequestBody Body;
        
        public activeTrialRequest() {
        }
        
        public activeTrialRequest(BKI_DichVuMatDat.LicenseManagerService.activeTrialRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class activeTrialRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string macAddress;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string company;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string email;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string phone;
        
        public activeTrialRequestBody() {
        }
        
        public activeTrialRequestBody(string macAddress, string company, string email, string phone) {
            this.macAddress = macAddress;
            this.company = company;
            this.email = email;
            this.phone = phone;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class activeTrialResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="activeTrialResponse", Namespace="http://tempuri.org/", Order=0)]
        public BKI_DichVuMatDat.LicenseManagerService.activeTrialResponseBody Body;
        
        public activeTrialResponse() {
        }
        
        public activeTrialResponse(BKI_DichVuMatDat.LicenseManagerService.activeTrialResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class activeTrialResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool activeTrialResult;
        
        public activeTrialResponseBody() {
        }
        
        public activeTrialResponseBody(bool activeTrialResult) {
            this.activeTrialResult = activeTrialResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface LicenseManagerSoapChannel : BKI_DichVuMatDat.LicenseManagerService.LicenseManagerSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LicenseManagerSoapClient : System.ServiceModel.ClientBase<BKI_DichVuMatDat.LicenseManagerService.LicenseManagerSoap>, BKI_DichVuMatDat.LicenseManagerService.LicenseManagerSoap {
        
        public LicenseManagerSoapClient() {
        }
        
        public LicenseManagerSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LicenseManagerSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LicenseManagerSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LicenseManagerSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BKI_DichVuMatDat.LicenseManagerService.checkKeyResponse BKI_DichVuMatDat.LicenseManagerService.LicenseManagerSoap.checkKey(BKI_DichVuMatDat.LicenseManagerService.checkKeyRequest request) {
            return base.Channel.checkKey(request);
        }
        
        public bool checkKey(string macAddress) {
            BKI_DichVuMatDat.LicenseManagerService.checkKeyRequest inValue = new BKI_DichVuMatDat.LicenseManagerService.checkKeyRequest();
            inValue.Body = new BKI_DichVuMatDat.LicenseManagerService.checkKeyRequestBody();
            inValue.Body.macAddress = macAddress;
            BKI_DichVuMatDat.LicenseManagerService.checkKeyResponse retVal = ((BKI_DichVuMatDat.LicenseManagerService.LicenseManagerSoap)(this)).checkKey(inValue);
            return retVal.Body.checkKeyResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<BKI_DichVuMatDat.LicenseManagerService.checkKeyResponse> BKI_DichVuMatDat.LicenseManagerService.LicenseManagerSoap.checkKeyAsync(BKI_DichVuMatDat.LicenseManagerService.checkKeyRequest request) {
            return base.Channel.checkKeyAsync(request);
        }
        
        public System.Threading.Tasks.Task<BKI_DichVuMatDat.LicenseManagerService.checkKeyResponse> checkKeyAsync(string macAddress) {
            BKI_DichVuMatDat.LicenseManagerService.checkKeyRequest inValue = new BKI_DichVuMatDat.LicenseManagerService.checkKeyRequest();
            inValue.Body = new BKI_DichVuMatDat.LicenseManagerService.checkKeyRequestBody();
            inValue.Body.macAddress = macAddress;
            return ((BKI_DichVuMatDat.LicenseManagerService.LicenseManagerSoap)(this)).checkKeyAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BKI_DichVuMatDat.LicenseManagerService.checkTrialResponse BKI_DichVuMatDat.LicenseManagerService.LicenseManagerSoap.checkTrial(BKI_DichVuMatDat.LicenseManagerService.checkTrialRequest request) {
            return base.Channel.checkTrial(request);
        }
        
        public bool checkTrial(string macAddress) {
            BKI_DichVuMatDat.LicenseManagerService.checkTrialRequest inValue = new BKI_DichVuMatDat.LicenseManagerService.checkTrialRequest();
            inValue.Body = new BKI_DichVuMatDat.LicenseManagerService.checkTrialRequestBody();
            inValue.Body.macAddress = macAddress;
            BKI_DichVuMatDat.LicenseManagerService.checkTrialResponse retVal = ((BKI_DichVuMatDat.LicenseManagerService.LicenseManagerSoap)(this)).checkTrial(inValue);
            return retVal.Body.checkTrialResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<BKI_DichVuMatDat.LicenseManagerService.checkTrialResponse> BKI_DichVuMatDat.LicenseManagerService.LicenseManagerSoap.checkTrialAsync(BKI_DichVuMatDat.LicenseManagerService.checkTrialRequest request) {
            return base.Channel.checkTrialAsync(request);
        }
        
        public System.Threading.Tasks.Task<BKI_DichVuMatDat.LicenseManagerService.checkTrialResponse> checkTrialAsync(string macAddress) {
            BKI_DichVuMatDat.LicenseManagerService.checkTrialRequest inValue = new BKI_DichVuMatDat.LicenseManagerService.checkTrialRequest();
            inValue.Body = new BKI_DichVuMatDat.LicenseManagerService.checkTrialRequestBody();
            inValue.Body.macAddress = macAddress;
            return ((BKI_DichVuMatDat.LicenseManagerService.LicenseManagerSoap)(this)).checkTrialAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BKI_DichVuMatDat.LicenseManagerService.checkMacTrialResponse BKI_DichVuMatDat.LicenseManagerService.LicenseManagerSoap.checkMacTrial(BKI_DichVuMatDat.LicenseManagerService.checkMacTrialRequest request) {
            return base.Channel.checkMacTrial(request);
        }
        
        public bool checkMacTrial(string macAddress) {
            BKI_DichVuMatDat.LicenseManagerService.checkMacTrialRequest inValue = new BKI_DichVuMatDat.LicenseManagerService.checkMacTrialRequest();
            inValue.Body = new BKI_DichVuMatDat.LicenseManagerService.checkMacTrialRequestBody();
            inValue.Body.macAddress = macAddress;
            BKI_DichVuMatDat.LicenseManagerService.checkMacTrialResponse retVal = ((BKI_DichVuMatDat.LicenseManagerService.LicenseManagerSoap)(this)).checkMacTrial(inValue);
            return retVal.Body.checkMacTrialResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<BKI_DichVuMatDat.LicenseManagerService.checkMacTrialResponse> BKI_DichVuMatDat.LicenseManagerService.LicenseManagerSoap.checkMacTrialAsync(BKI_DichVuMatDat.LicenseManagerService.checkMacTrialRequest request) {
            return base.Channel.checkMacTrialAsync(request);
        }
        
        public System.Threading.Tasks.Task<BKI_DichVuMatDat.LicenseManagerService.checkMacTrialResponse> checkMacTrialAsync(string macAddress) {
            BKI_DichVuMatDat.LicenseManagerService.checkMacTrialRequest inValue = new BKI_DichVuMatDat.LicenseManagerService.checkMacTrialRequest();
            inValue.Body = new BKI_DichVuMatDat.LicenseManagerService.checkMacTrialRequestBody();
            inValue.Body.macAddress = macAddress;
            return ((BKI_DichVuMatDat.LicenseManagerService.LicenseManagerSoap)(this)).checkMacTrialAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BKI_DichVuMatDat.LicenseManagerService.activeKeyResponse BKI_DichVuMatDat.LicenseManagerService.LicenseManagerSoap.activeKey(BKI_DichVuMatDat.LicenseManagerService.activeKeyRequest request) {
            return base.Channel.activeKey(request);
        }
        
        public bool activeKey(string macAddress, string company, string key) {
            BKI_DichVuMatDat.LicenseManagerService.activeKeyRequest inValue = new BKI_DichVuMatDat.LicenseManagerService.activeKeyRequest();
            inValue.Body = new BKI_DichVuMatDat.LicenseManagerService.activeKeyRequestBody();
            inValue.Body.macAddress = macAddress;
            inValue.Body.company = company;
            inValue.Body.key = key;
            BKI_DichVuMatDat.LicenseManagerService.activeKeyResponse retVal = ((BKI_DichVuMatDat.LicenseManagerService.LicenseManagerSoap)(this)).activeKey(inValue);
            return retVal.Body.activeKeyResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<BKI_DichVuMatDat.LicenseManagerService.activeKeyResponse> BKI_DichVuMatDat.LicenseManagerService.LicenseManagerSoap.activeKeyAsync(BKI_DichVuMatDat.LicenseManagerService.activeKeyRequest request) {
            return base.Channel.activeKeyAsync(request);
        }
        
        public System.Threading.Tasks.Task<BKI_DichVuMatDat.LicenseManagerService.activeKeyResponse> activeKeyAsync(string macAddress, string company, string key) {
            BKI_DichVuMatDat.LicenseManagerService.activeKeyRequest inValue = new BKI_DichVuMatDat.LicenseManagerService.activeKeyRequest();
            inValue.Body = new BKI_DichVuMatDat.LicenseManagerService.activeKeyRequestBody();
            inValue.Body.macAddress = macAddress;
            inValue.Body.company = company;
            inValue.Body.key = key;
            return ((BKI_DichVuMatDat.LicenseManagerService.LicenseManagerSoap)(this)).activeKeyAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BKI_DichVuMatDat.LicenseManagerService.activeTrialResponse BKI_DichVuMatDat.LicenseManagerService.LicenseManagerSoap.activeTrial(BKI_DichVuMatDat.LicenseManagerService.activeTrialRequest request) {
            return base.Channel.activeTrial(request);
        }
        
        public bool activeTrial(string macAddress, string company, string email, string phone) {
            BKI_DichVuMatDat.LicenseManagerService.activeTrialRequest inValue = new BKI_DichVuMatDat.LicenseManagerService.activeTrialRequest();
            inValue.Body = new BKI_DichVuMatDat.LicenseManagerService.activeTrialRequestBody();
            inValue.Body.macAddress = macAddress;
            inValue.Body.company = company;
            inValue.Body.email = email;
            inValue.Body.phone = phone;
            BKI_DichVuMatDat.LicenseManagerService.activeTrialResponse retVal = ((BKI_DichVuMatDat.LicenseManagerService.LicenseManagerSoap)(this)).activeTrial(inValue);
            return retVal.Body.activeTrialResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<BKI_DichVuMatDat.LicenseManagerService.activeTrialResponse> BKI_DichVuMatDat.LicenseManagerService.LicenseManagerSoap.activeTrialAsync(BKI_DichVuMatDat.LicenseManagerService.activeTrialRequest request) {
            return base.Channel.activeTrialAsync(request);
        }
        
        public System.Threading.Tasks.Task<BKI_DichVuMatDat.LicenseManagerService.activeTrialResponse> activeTrialAsync(string macAddress, string company, string email, string phone) {
            BKI_DichVuMatDat.LicenseManagerService.activeTrialRequest inValue = new BKI_DichVuMatDat.LicenseManagerService.activeTrialRequest();
            inValue.Body = new BKI_DichVuMatDat.LicenseManagerService.activeTrialRequestBody();
            inValue.Body.macAddress = macAddress;
            inValue.Body.company = company;
            inValue.Body.email = email;
            inValue.Body.phone = phone;
            return ((BKI_DichVuMatDat.LicenseManagerService.LicenseManagerSoap)(this)).activeTrialAsync(inValue);
        }
    }
}
